(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{373:function(t,s,a){"use strict";a.r(s);var e=a(18),i=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"✍간단한-정리✍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#✍간단한-정리✍"}},[t._v("#")]),t._v(" ✍"),a("strong",[t._v("간단한 정리")]),t._v("✍")]),t._v(" "),a("h2",{attrs:{id:"✍시퀀스-컨테이너와-연관-컨테이너"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#✍시퀀스-컨테이너와-연관-컨테이너"}},[t._v("#")]),t._v(" ✍시퀀스 컨테이너와 연관 컨테이너")]),t._v(" "),a("p",[t._v("• Sequence 컨테이너 => (벡터, 리스트 데크)")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("* 원소를 순차적으로 저장함\n")])])]),a("p",[t._v("• Associated 컨테이너 => (set, multiset, map 그리고 multimap)")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("* 원소를 연관 키값으로 접근\n")])])]),a("h2",{attrs:{id:"✍배열과-이중링크드리스트-구현의-차이-시퀀스-컨테이너"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#✍배열과-이중링크드리스트-구현의-차이-시퀀스-컨테이너"}},[t._v("#")]),t._v(" ✍배열과 이중링크드리스트 구현의 차이 (시퀀스 컨테이너)")]),t._v(" "),a("p",[t._v("• "),a("strong",[t._v("배열")]),t._v("로 구현시 삽입, 삭제는 O(n) 나머지는 O(1) ⇒ ex) "),a("code",[t._v("std::vector<T>")])]),t._v(" "),a("p",[t._v("• "),a("strong",[t._v("이중링크드리스트")]),t._v("로 구현시 임의 접근은 O(n) 나머지는 O(1) ⇒ ex) "),a("code",[t._v("std::list<T>")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("std::list"),a("T",[t._v(" 는 연속적인 임의접근을 어떻게 개선 했을까?")])],1),t._v(" "),a("p",[t._v("• 반복자(iterator)증가 연산을 통해 이전 노드를 에서 다음 노드로 접근을 함")]),t._v(" "),a("p",[t._v("• 이렇게 하면 연속적 노드 접근 시 O(1) 시간이 소요된다.")]),t._v(" "),a("h2",{attrs:{id:"✍ios-base-sync-with-stdio-false-시-주의사항"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#✍ios-base-sync-with-stdio-false-시-주의사항"}},[t._v("#")]),t._v(" ✍ios::base::sync_with_stdio(false)시 주의사항")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("ios::sync_with_stdio는 cpp의 iostream을 c의 stdio와 동기화시켜주는 역할을 한다.")]),t._v(" "),a("p",[t._v('기본값인 true일 때는 cout << "HI"; printf("BYE"); cout<<"hi" 가 순서대로 출력되지만, false일때는 어떤 순서로 출력될지 알 수가 없다.')]),t._v(" "),a("p",[t._v("그렇기 때문에 ios::sync_with_stdio(false); 를 추가하면,")]),t._v(" "),a("p",[t._v("iostream 함수인 cin/ cout을 stdio 함수인 getchar()와 같이 쓰시면 안된다고 한다.")])])])])}),[],!1,null,null,null);s.default=i.exports}}]);