(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{371:function(t,s,a){"use strict";a.r(s);var n=a(18),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_2장-객체지향설계"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2장-객체지향설계"}},[t._v("#")]),t._v(" 2장 객체지향설계")]),t._v(" "),a("h2",{attrs:{id:"table-of-contents"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#table-of-contents"}},[t._v("#")]),t._v(" Table Of Contents")]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#table-of-contents"}},[t._v("Table Of Contents")])]),a("li",[a("a",{attrs:{href:"#객체지향-3대-요소"}},[t._v("객체지향 3대 요소")])]),a("li",[a("a",{attrs:{href:"#정적바인딩-static-binding-vs-동적바인딩-dynamic-binding"}},[t._v("정적바인딩(Static binding) vs 동적바인딩(Dynamic binding)")])]),a("li",[a("a",{attrs:{href:"#가상소멸자"}},[t._v("가상소멸자")])]),a("li",[a("a",{attrs:{href:"#템플릿"}},[t._v("템플릿")]),a("ul",[a("li",[a("a",{attrs:{href:"#함수-템플릿"}},[t._v("함수 템플릿")])]),a("li",[a("a",{attrs:{href:"#클래스-템플릿"}},[t._v("클래스 템플릿")])]),a("li",[a("a",{attrs:{href:"#템플릿화된-매개변수"}},[t._v("템플릿화된 매개변수")])])])]),a("li",[a("a",{attrs:{href:"#예외-exception"}},[t._v("예외 (Exception)")]),a("ul",[a("li",[a("a",{attrs:{href:"#예외-처리"}},[t._v("예외 처리")])]),a("li",[a("a",{attrs:{href:"#try-catch-throw-방법"}},[t._v("try-catch , throw 방법")])]),a("li",[a("a",{attrs:{href:"#함수-예외-처리"}},[t._v("함수 예외 처리")])])])])])]),a("p"),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("추상화")]),t._v(" : 각 연산이 무슨 일을 하는 지는 지정하지만 어떻게 하는지는 몰라도 됨")]),t._v(" "),a("ul",[a("li",[t._v("즉, 내부 구현을 몰라도 외부 기능을 쉽게 사용할 수 있게함")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("캡슐화")]),t._v(" : 시스템의 내부 구현 세부사항을 외부로 드러내지 않는 것")]),t._v(" "),a("ul",[a("li",[t._v("외부 인터페이스만 지켜주면 내부를 어떻게 구현하든 상관 없음")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("모듈화")]),t._v(" : 독립된 기능적 단위의 구성요소들")])])]),t._v(" "),a("h2",{attrs:{id:"객체지향-3대-요소"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#객체지향-3대-요소"}},[t._v("#")]),t._v(" 객체지향 3대 요소")]),t._v(" "),a("p",[a("strong",[t._v("캡슐화(Encapsulation)")])]),t._v(" "),a("p",[t._v("객체가 구현된 방식의 세부정보를 사용자로부터 숨기면서 유지하는 방식"),a("br"),t._v("\n사용자는 객체의 공개 인터페이스(public)을 통해 접근할 수 있다.")]),t._v(" "),a("p",[t._v("C++에서는 접근지정자를 통해 캡슐화를 구현한다 - Public, Private")]),t._v(" "),a("ul",[a("li",[t._v("클래스의 재사용성과 유지보수 측면에서 많은 이점이 있다.")])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("캡슐화를 통해 내부 구현을 몰라도 쉽게 사용할 수 있다.")]),t._v(" "),a("ul",[a("li",[t._v("ex) "),a("code",[t._v("std::string")]),t._v(", "),a("code",[t._v("std::vector")])])])]),t._v(" "),a("li",[a("p",[t._v("캡슐화를 통해 데이터 보호와 오용을 방지할 수 있다.")]),t._v(" "),a("ul",[a("li",[t._v("ex) 범위 검사, 배열의 범위 초과 접근")])])])]),t._v(" "),a("p",[a("strong",[t._v("상속성(Inheritance)")])]),t._v(" "),a("p",[t._v("이미 정의 된 부모 클래스의 모든 속성과 연산을 자식 클래스가 물려 받음.")]),t._v(" "),a("ol",[a("li",[t._v("부모의 모든 속성과 연상을 자신이 사용 가능")]),t._v(" "),a("li",[t._v("자식은 부모로부터 받은 속성과 연산 외에 새로운 속성과 연산을 추가할 수 있음")]),t._v(" "),a("li",[t._v("속성과 연산을 공유할 수 있기 때문에 재사용성을 증대시킴")])]),t._v(" "),a("p",[a("strong",[t._v("다형성(Polymoriphism)")])]),t._v(" "),a("p",[t._v("객체가 연산을 수행해야 할 때 자신(객채)이 가지고 있는 방법으로 응답하는 것")]),t._v(" "),a("p",[a("strong",[t._v("1.")]),t._v(" 변수의 타입에 따라 호출 되는 함수를 결정\n"),a("strong",[t._v("2.")]),t._v(" 오버라이딩 - 상속받은 함수를 그대로 사용하지 않고 수정해서 사용 (함수명,인자,리턴값은 같아야 함)")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("따라서, 기본 클래스 포인터를 재활용해 파생클래스를 연결시킬 수 있음"),a("br"),t._v("\n(함수 동적바인딩 수행)")])]),t._v(" "),a("h2",{attrs:{id:"정적바인딩-static-binding-vs-동적바인딩-dynamic-binding"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#정적바인딩-static-binding-vs-동적바인딩-dynamic-binding"}},[t._v("#")]),t._v(" 정적바인딩(Static binding) vs 동적바인딩(Dynamic binding)")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("바인딩?")]),t._v(" "),a("p",[t._v("함수 호출하는 부분에 해당 함수의 메모리 번지를 연결시키는 것")])]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("정적바인딩(일반함수)")])]),t._v(" "),a("ul",[a("li",[t._v("컴파일 시간에 함수 주소가 결정되어 바인딩 됨")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("동적바인딩(가상함수)")]),t._v(" - virtual 함수")]),t._v(" "),a("ul",[a("li",[t._v("실행파일을 만들 때 바인딩 없이 보류 상태로 둠")]),t._v(" "),a("li",[t._v("점프할 메모리 공간(4byte)을 가지고 있다가 런타임에 결정\n"),a("ul",[a("li",[t._v("단점 : "),a("strong",[t._v("타입체킹")]),t._v("으로 인한 수행 속도 저하")])])])])])]),t._v(" "),a("h2",{attrs:{id:"가상소멸자"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#가상소멸자"}},[t._v("#")]),t._v(" 가상소멸자")]),t._v(" "),a("ul",[a("li",[t._v("가상함수(virtual)를 사용했다면 기본 클래스의 소멸자는 "),a("strong",[t._v("가상함수")]),t._v("로 선언해야만 한다.\n"),a("ul",[a("li",[t._v("그렇지 않으면 기본 소멸자만 호출 되어 "),a("strong",[t._v("메모리 누수")]),t._v(" 현상이 생긴다.")])])])]),t._v(" "),a("h2",{attrs:{id:"템플릿"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#템플릿"}},[t._v("#")]),t._v(" 템플릿")]),t._v(" "),a("h3",{attrs:{id:"함수-템플릿"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#함수-템플릿"}},[t._v("#")]),t._v(" "),a("strong",[t._v("함수 템플릿")])]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),t._v(" T"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nT "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("genericMin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("T a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" T b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h3",{attrs:{id:"클래스-템플릿"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#클래스-템플릿"}},[t._v("#")]),t._v(" "),a("strong",[t._v("클래스 템플릿")])]),t._v(" "),a("p",[t._v("C++은 템플릿화된 클래스 또한 허용한다. 이것은 많은 다른 타입이 적용될 수 있는 하나의 자료구조를 제공한다. "),a("strong",[t._v("(매우 강력!)")])]),t._v(" "),a("h3",{attrs:{id:"템플릿화된-매개변수"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#템플릿화된-매개변수"}},[t._v("#")]),t._v(" "),a("strong",[t._v("템플릿화된 매개변수")])]),t._v(" "),a("p",[t._v("클래스 템플릿의 인스턴스화 시 실제 매개변수는 템플릿된 타입이 될 수 있다.")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("  BasicVector"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BasicVector"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("xv")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//..")]),t._v("\n  xv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h2",{attrs:{id:"예외-exception"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#예외-exception"}},[t._v("#")]),t._v(" 예외 (Exception)")]),t._v(" "),a("blockquote",[a("p",[t._v("프로그램 실행 동안 일어나는 예기치 못한 사건들")])]),t._v(" "),a("h3",{attrs:{id:"예외-처리"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#예외-처리"}},[t._v("#")]),t._v(" "),a("strong",[t._v("예외 처리")])]),t._v(" "),a("blockquote",[a("p",[t._v("예외를 처리하는 과정")])]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 나누는 수가 0이라면,")]),t._v("\n  cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"나누는 수가 0이 될 수 없습니다."')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n  cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"를 "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"로 나눈 몫은 "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"입니다."')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("이런 방식의 예외처리는 똑같은 예외 발생 시 마다 똑같이 처리해줘야 하기 때문에\n코드가 늘어나고 예외 처리의 구분이 명확하지 않다.")]),t._v(" "),a("p",[t._v("따라서 아래 방법을 사용하면 좋다")]),t._v(" "),a("h3",{attrs:{id:"try-catch-throw-방법"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#try-catch-throw-방법"}},[t._v("#")]),t._v(" try-catch , throw 방법")]),t._v(" "),a("ul",[a("li",[t._v("기본 형태")])]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 예외 발생")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("예외 조건"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" 예외 객체"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 예외를 던지는 영역")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("예외 객체"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 던져진 예외를 잡는 영역")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 예외 처리 영역")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("ul",[a("li",[t._v("응용 예시")])]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"를 "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"로 나눈 몫은 "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"입니다."')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" exception"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"예외 발생, 나누는 수는 "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"가 될 수 없습니다."')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("ol",[a("li",[t._v("b가 0이면 throw로 b를 던져버림")]),t._v(" "),a("li",[t._v("던져진 b는 exception에 들어가게 됨")]),t._v(" "),a("li",[t._v("이것을 catch가 잡아서 처리")])]),t._v(" "),a("h3",{attrs:{id:"함수-예외-처리"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#함수-예외-처리"}},[t._v("#")]),t._v(" 함수 예외 처리")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" exception"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"예외 발생, 나누는 수는 "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"가 될 수 없습니다."')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("p",[t._v("함수 내에서 예외를 던지고 있으나 함수 밖에 예외 처리 영역이 있기 때문에 호출된\n영역으로 예외를 전달한다."),a("br"),t._v("\n전달된 데이터를 catch가 잡아서 처리한다. (기본 데이터형 뿐만 아니라 객체도 가능)")]),t._v(" "),a("hr"),t._v(" "),a("p",[a("em",[a("strong",[t._v("Last-Modified Date 2020-08-07")])])]),t._v(" "),a("hr")])}),[],!1,null,null,null);s.default=r.exports}}]);